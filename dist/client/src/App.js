import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Navigation from "@/components/Navigation";
import Splash from "@/pages/Splash";
import Login from "@/pages/Login";
import Signup from "@/pages/Signup";
import ForgotPassword from "@/pages/ForgotPassword";
import ResetPassword from "@/pages/ResetPassword";
import Dashboard from "@/pages/Dashboard";
import Profile from "@/pages/UserProfile";
import WeeklyPicks from "@/pages/WeeklyPicks";
import WeeklyResults from "@/pages/WeeklyResults";
import PreseasonRank from "@/pages/PreseasonRank";
import Leaderboard from "@/pages/Leaderboard";
import CastawayProfile from "@/pages/CastawayProfile";
import NotFound from "@/pages/NotFound";
import ProtectedRoute from "@/components/ProtectedRoute";
import AdminRoute from "@/components/AdminRoute";
// Admin
import AdminDashboard from "@/pages/admin/AdminDashboard";
import CastawayManager from "@/pages/admin/CastawayManager";
import UserManager from "@/pages/admin/UserManager";
import LeagueManager from "@/pages/admin/LeagueManager";
import PicksManager from "@/pages/admin/PicksManager";
import PointsManager from "@/pages/admin/PointsManagaer";
import SeasonManager from "@/pages/admin/SeasonManager";
import StatsDashboard from "@/pages/admin/StatsDashboard";
import { routes } from "@/shared/routes";
const App = () => (_jsxs(Router, { children: [_jsx(Navigation, {}), _jsxs(Routes, { children: [_jsx(Route, { path: routes.root, element: _jsx(Splash, {}) }), _jsx(Route, { path: routes.login, element: _jsx(Login, {}) }), _jsx(Route, { path: routes.signup, element: _jsx(Signup, {}) }), _jsx(Route, { path: routes.forgotPassword, element: _jsx(ForgotPassword, {}) }), _jsx(Route, { path: routes.resetPassword, element: _jsx(ResetPassword, {}) }), _jsx(Route, { path: routes.dashboard, element: _jsx(ProtectedRoute, { children: _jsx(Dashboard, {}) }) }), _jsx(Route, { path: routes.profile, element: _jsx(ProtectedRoute, { children: _jsx(Profile, {}) }) }), _jsx(Route, { path: routes.weeklyPicks, element: _jsx(ProtectedRoute, { children: _jsx(WeeklyPicks, {}) }) }), _jsx(Route, { path: routes.weeklyResults, element: _jsx(ProtectedRoute, { children: _jsx(WeeklyResults, {}) }) }), _jsx(Route, { path: routes.preseasonRank, element: _jsx(ProtectedRoute, { children: _jsx(PreseasonRank, {}) }) }), _jsx(Route, { path: routes.leaderboard, element: _jsx(ProtectedRoute, { children: _jsx(Leaderboard, {}) }) }), _jsx(Route, { path: "/castaway/:id", element: _jsx(ProtectedRoute, { children: _jsx(CastawayProfile, {}) }) }), _jsx(Route, { path: routes.admin.index, element: _jsx(AdminRoute, { children: _jsx(AdminDashboard, {}) }) }), _jsx(Route, { path: routes.admin.castaways, element: _jsx(AdminRoute, { children: _jsx(CastawayManager, {}) }) }), _jsx(Route, { path: routes.admin.users, element: _jsx(AdminRoute, { children: _jsx(UserManager, {}) }) }), _jsx(Route, { path: routes.admin.league, element: _jsx(AdminRoute, { children: _jsx(LeagueManager, {}) }) }), _jsx(Route, { path: routes.admin.picks, element: _jsx(AdminRoute, { children: _jsx(PicksManager, {}) }) }), _jsx(Route, { path: routes.admin.points, element: _jsx(AdminRoute, { children: _jsx(PointsManager, {}) }) }), _jsx(Route, { path: routes.admin.season, element: _jsx(AdminRoute, { children: _jsx(SeasonManager, {}) }) }), _jsx(Route, { path: routes.admin.stats, element: _jsx(AdminRoute, { children: _jsx(StatsDashboard, {}) }) }), _jsx(Route, { path: routes.notFound, element: _jsx(NotFound, {}) })] })] }));
export default App;
